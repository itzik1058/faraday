services:
  miniflux:
    image: miniflux/miniflux:latest
    container_name: miniflux
    profiles:
      - miniflux
    environment:
      DATABASE_URL: postgres://${MINIFLUX_DB_USERNAME:?}:${MINIFLUX_DB_PASSWORD:?}@miniflux-postgres/${MINIFLUX_DB_DATABASE:?}?sslmode=disable
      ADMIN_USERNAME: ${MINIFLUX_ADMIN_USERNAME:?}
      ADMIN_PASSWORD: ${MINIFLUX_ADMIN_PASSWORD:?}
      RUN_MIGRATIONS: 1
      CREATE_ADMIN: 1
      OAUTH2_PROVIDER: oidc
      OAUTH2_CLIENT_ID: ${MINIFLUX_OAUTH2_CLIENT_ID:?}
      OAUTH2_CLIENT_SECRET: ${MINIFLUX_OAUTH2_CLIENT_SECRET:?}
      OAUTH2_REDIRECT_URL: https://rss.${DOMAIN:?}/oauth2/oidc/callback
      OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://auth.${DOMAIN:?}/application/o/miniflux/
      OAUTH2_USER_CREATION: 1
    networks:
      - miniflux
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.miniflux.rule: Host(`rss.${DOMAIN:?}`)
      traefik.http.routers.miniflux.entryPoints: websecure
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]
    depends_on:
      miniflux-postgres:
        condition: service_healthy
    restart: unless-stopped

  miniflux-postgres:
    image: postgres:15
    container_name: miniflux-postgres
    profiles:
      - miniflux
    environment:
      POSTGRES_DB: ${MINIFLUX_DB_DATABASE:?}
      POSTGRES_USER: ${MINIFLUX_DB_USERNAME:?}
      POSTGRES_PASSWORD: ${MINIFLUX_DB_PASSWORD:?}
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/miniflux/database
        target: /var/lib/postgresql/data
      - type: bind
        source: ${APP_DATA_PATH:?}/miniflux/backup
        target: /backup
    healthcheck:
      test: pg_isready -U ${MINIFLUX_DB_USERNAME:?}
      interval: 10s
      start_period: 30s
    networks:
      - miniflux
    labels:
      com.centurylinklabs.watchtower.enable: true
      docker-volume-backup.exec-label: miniflux
      docker-volume-backup.archive-pre: "/bin/sh -c 'pg_dumpall --clean --if-exists --username=${MINIFLUX_DB_USERNAME:?} | gzip > /backup/dump.sql.gz'"
    restart: unless-stopped

  miniflux-backup:
    image: offen/docker-volume-backup:v2
    container_name: miniflux-backup
    profiles:
      - backup
      - miniflux
    environment:
      EXEC_LABEL: miniflux
      BACKUP_STOP_DURING_BACKUP_LABEL: miniflux
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 7
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/miniflux
        target: /backup/miniflux
        read_only: true
      - type: bind
        source: ${BACKUP_DATA_PATH:?}/miniflux
        target: /archive
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    network_mode: none
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

networks:
  miniflux:
    name: miniflux
