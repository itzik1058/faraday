services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:release
    container_name: immich-server
    profiles:
      - immich
    environment:
      TZ: ${TZ:?}
      DB_HOSTNAME: immich-postgres
      DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME:?}
      DB_USERNAME: ${IMMICH_DB_USERNAME:?}
      DB_PASSWORD: ${IMMICH_DB_PASSWORD:?}
      REDIS_HOSTNAME: immich-redis
    devices:
      # hardware acceleration
      - /dev/dri:/dev/dri
    volumes:
      - type: bind
        source: ${USER_DATA_PATH:?}/photos/immich
        target: /usr/src/app/upload
    networks:
      - immich
    # ports:
    #   - 2283:3001
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.immich.rule: Host(`immich.${DOMAIN:?}`)
      traefik.http.routers.immich.entrypoints: websecure
      traefik.http.routers.immich.middlewares: ip-allowlist@docker
    depends_on:
      - immich-redis
      - immich-postgres
    restart: unless-stopped

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:release
    container_name: immich-machine-learning
    profiles:
      - immich
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/immich/ml
        target: /cache
    networks:
      - immich
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

  immich-redis:
    image: redis:6.2-alpine@sha256:70a7a5b641117670beae0d80658430853896b5ef269ccf00d1827427e3263fa3
    container_name: immich-redis
    profiles:
      - immich
    networks:
      - immich
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

  immich-postgres:
    image: tensorchord/pgvecto-rs:pg14-v0.2.0
    container_name: immich-postgres
    profiles:
      - immich
    environment:
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME:?}
      POSTGRES_USER: ${IMMICH_DB_USERNAME:?}
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD:?}
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/immich/database
        target: /var/lib/postgresql/data
      - type: bind
        source: ${APP_DATA_PATH:?}/immich/backup
        target: /backup
    networks:
      - immich
    labels:
      com.centurylinklabs.watchtower.enable: true
      # https://immich.app/docs/administration/backup-and-restore/
      docker-volume-backup.exec-label: immich
      docker-volume-backup.archive-pre: "/bin/sh -c 'pg_dumpall --clean --if-exists --username=${IMMICH_DB_USERNAME:?} | gzip > /backup/dump.sql.gz'"
    restart: unless-stopped

  immich-backup:
    image: offen/docker-volume-backup:v2
    container_name: immich-backup
    profiles:
      - backup
      - immich
    environment:
      EXEC_LABEL: immich
      BACKUP_STOP_DURING_BACKUP_LABEL: immich
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 7
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/immich
        target: /backup/immich
        read_only: true
      - type: bind
        source: ${BACKUP_DATA_PATH:?}/immich
        target: /archive
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    network_mode: none
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

networks:
  immich:
    name: immich
