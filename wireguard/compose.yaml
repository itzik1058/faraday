services:
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    profiles:
      - wireguard
    environment:
      WG_HOST: vpn.${DOMAIN:?}
      WG_DEFAULT_DNS: ${HOST_IP:?}
      UI_TRAFFIC_STATS: true
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/wg-easy
        target: /etc/wireguard
    ports:
      - 51820:51820/udp
    networks:
      - wireguard
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.wireguard.rule: Host(`vpn.${DOMAIN:?}`)
      traefik.http.routers.wireguard.entryPoints: websecure
      traefik.http.routers.wireguard.middlewares: ip-allowlist@docker
      traefik.http.services.wireguard.loadbalancer.server.port: 51821
    restart: unless-stopped

  wg-easy-backup:
    image: offen/docker-volume-backup:v2
    container_name: wg-easy-backup
    profiles:
      - backup
      - wireguard
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/wg-easy
        target: /backup/wg-easy
        read_only: true
      - type: bind
        source: ${BACKUP_DATA_PATH:?}/wg-easy
        target: /archive
    network_mode: none
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

networks:
  wireguard:
    name: wireguard
