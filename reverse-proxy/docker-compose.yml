services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    env_file:
      - ../.env
      - .env
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
    volumes:
      - type: bind
        source: ./traefik/traefik.yml
        target: /traefik.yml
        read_only: true
      - type: bind
        source: ./traefik/config
        target: /config
        read_only: true
      - type: bind
        source: ${APP_DATA_PATH}/traefik/letsencrypt
        target: /letsencrypt
      - type: bind
        source: ${APP_LOG_PATH}/traefik
        target: /logs
    networks:
      - reverse-proxy
      - docker-socket-proxy
      - authelia
      # - watchtower
      - homepage
      - immich
      - photoprism
      - paperless-ngx
      - speedtest-tracker
      - filebrowser
      - streaming
      - mealie
      - rallly
      - stirling-pdf
      - microbin
      - wger
    depends_on:
      - docker-socket-proxy
      - authelia
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: docker-socket-proxy
    environment:
      CONTAINERS: 1
      INFO: 1
      IMAGES: 1
      VOLUMES: 1
      NETWORKS: 1
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    networks:
      - docker-socket-proxy
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    env_file:
      - ../.env
      - .env
    environment:
      TOKEN: ${DUCKDNS_TOKEN}
      LOG_FILE: false
    volumes:
      - type: bind
        source: ${APP_DATA_PATH}/duckdns
        target: /config
    networks:
      - duckdns
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

  authelia:
    image: authelia/authelia
    container_name: authelia
    env_file:
      - ../.env
      - .env
    environment:
      AUTHELIA_DEFAULT_REDIRECTION_URL: https://${DOMAIN}/
      AUTHELIA_SESSION_DOMAIN: ${DOMAIN}
    volumes:
      - type: bind
        source: ./authelia
        target: /config
        read_only: true
      - type: bind
        source: ${APP_DATA_PATH}/authelia
        target: /data
      - type: bind
        source: ${APP_LOG_PATH}/authelia
        target: /logs
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.authelia.rule: Host(`auth.${DOMAIN}`)
      traefik.http.routers.authelia.entryPoints: websecure
    networks:
      - authelia
    depends_on:
      - authelia-redis
    restart: unless-stopped

  authelia-redis:
    image: redis:alpine
    container_name: authelia-redis
    volumes:
      - type: bind
        source: ${APP_DATA_PATH}/authelia/redis
        target: /data
    networks:
      - authelia
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

  # whoami:
  #   image: traefik/whoami
  #   container_name: whoami
  #   networks:
  #     - reverse-proxy
  #   labels:
  #     traefik.enable: true
  #     traefik.http.routers.whoami.rule: Host(`${DOMAIN}`)
  #     traefik.http.routers.whoami.entryPoints: websecure
  #     traefik.http.routers.whoami.middlewares: authelia@file
  #   restart: unless-stopped

networks:
  reverse-proxy:
  docker-socket-proxy:
  authelia:
  duckdns:
  homepage:
    external: true
  immich:
    external: true
  photoprism:
    external: true
  paperless-ngx:
    external: true
  speedtest-tracker:
    external: true
  filebrowser:
    external: true
  streaming:
    external: true
  mealie:
    external: true
  rallly:
    external: true
  stirling-pdf:
    external: true
  microbin:
    external: true
  wger:
    external: true
