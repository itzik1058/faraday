services:
  wger-nginx:
    image: nginx:stable
    container_name: wger-nginx
    profiles:
      - wger
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/static
        target: /wger/static
        read_only: true
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/media
        target: /wger/media
        read_only: true
    networks:
      - wger
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.wger.rule: Host(`wger.${DOMAIN:?}`)
      traefik.http.routers.wger.entryPoints: websecure
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - wger-server
    restart: unless-stopped

  wger-server:
    image: wger/server
    container_name: wger-server
    profiles:
      - wger
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}

      SECRET_KEY: ${WGER_SECRET_KEY:?}
      SIGNING_KEY: ${WGER_SIGNING_KEY:?}
      TIME_ZONE: ${TZ:?}

      CSRF_TRUSTED_ORIGINS: https://wger.${DOMAIN:?}
      X_FORWARDED_PROTO_HEADER_SET: "True"

      # MEDIA_URL: https://wger.${DOMAIN:?}/media/
      # STATIC_URL: https://wger.${DOMAIN:?}/static/

      WGER_INSTANCE: https://wger.de
      ALLOW_REGISTRATION: "True"
      ALLOW_GUEST_USERS: "True"
      ALLOW_UPLOAD_VIDEOS: "True"
      # MIN_ACCOUNT_AGE_TO_TRUST: 21
      SYNC_EXERCISES_ON_STARTUP: "True"
      DOWNLOAD_EXERCISE_IMAGES_ON_STARTUP: "True"
      SYNC_EXERCISES_CELERY: "False"
      SYNC_EXERCISE_IMAGES_CELERY: "False"
      SYNC_EXERCISE_VIDEOS_CELERY: "False"
      DOWNLOAD_INGREDIENTS_FROM: WGER
      USE_CELERY: "False"

      DJANGO_DB_ENGINE: django.db.backends.postgresql
      DJANGO_DB_HOST: wger-db
      DJANGO_DB_PORT: 5432
      DJANGO_DB_DATABASE: ${WGER_DB_DATABASE_NAME:?}
      DJANGO_DB_USER: ${WGER_DB_USERNAME:?}
      DJANGO_DB_PASSWORD: ${WGER_DB_PASSWORD:?}
      DJANGO_PERFORM_MIGRATIONS: "True"

      DJANGO_CACHE_BACKEND: django_redis.cache.RedisCache
      DJANGO_CACHE_LOCATION: redis://wger-cache:6379/1
      DJANGO_CACHE_TIMEOUT: 1296000 # in seconds - 60*60*24*15, 15 Days
      DJANGO_CACHE_CLIENT_CLASS: django_redis.client.DefaultClient

      AXES_ENABLED: "True"
      AXES_FAILURE_LIMIT: 10
      AXES_COOLOFF_TIME: 30 # in minutes
      AXES_HANDLER: axes.handlers.cache.AxesCacheHandler

      DJANGO_DEBUG: "False"
      WGER_USE_GUNICORN: "True"
      EXERCISE_CACHE_TTL: 18000 # in seconds - 5*60*60, 5 hours
      SITE_URL: http://localhost

      ACCESS_TOKEN_LIFETIME: 10 # The lifetime duration of the access token, in minutes
      REFRESH_TOKEN_LIFETIME: 24 # The lifetime duration of the refresh token, in hours

      # RECAPTCHA_PUBLIC_KEY
      # RECAPTCHA_PRIVATE_KEY
      # NOCAPTCHA

      # ENABLE_EMAIL
      # EMAIL_HOST
      # EMAIL_PORT
      # EMAIL_HOST_USER
      # EMAIL_HOST_PASSWORD
      # EMAIL_USE_TLS
      # EMAIL_USE_SSL
      FROM_EMAIL: "wger Workout Manager <wger@example.com>"
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/static
        target: /home/wger/static
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/media
        target: /home/wger/media
    networks:
      - wger
    labels:
      com.centurylinklabs.watchtower.enable: true
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      wger-db:
        condition: service_healthy
      wger-cache:
        condition: service_healthy
    restart: unless-stopped

  wger-db:
    image: postgres:15-alpine
    container_name: wger-db
    profiles:
      - wger
    environment:
      POSTGRES_DB: ${WGER_DB_DATABASE_NAME:?}
      POSTGRES_USER: ${WGER_DB_USERNAME:?}
      POSTGRES_PASSWORD: ${WGER_DB_PASSWORD:?}
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/data
        target: /var/lib/postgresql/data
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/backup
        target: /backup
    networks:
      - wger
    labels:
      com.centurylinklabs.watchtower.enable: true
      docker-volume-backup.exec-label: wger
      docker-volume-backup.archive-pre: "/bin/sh -c 'pg_dumpall --clean --username=${WGER_DB_USERNAME:?} | gzip > /backup/dump.sql.gz'"
    healthcheck:
      test: pg_isready -U ${WGER_DB_USERNAME:?}
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  wger-cache:
    image: redis
    container_name: wger-cache
    profiles:
      - wger
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/wger/cache
        target: /data
    networks:
      - wger
    labels:
      com.centurylinklabs.watchtower.enable: true
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  wger-backup:
    image: offen/docker-volume-backup:v2
    container_name: wger-backup
    profiles:
      - backup
      - wger
    environment:
      EXEC_LABEL: wger
      BACKUP_STOP_DURING_BACKUP_LABEL: wger
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 7
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/wger
        target: /backup/wger
        read_only: true
      - type: bind
        source: ${BACKUP_DATA_PATH:?}/wger
        target: /archive
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    network_mode: none
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

networks:
  wger:
    name: wger
