services:
  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-ngx
    profiles:
      - paperless
    environment:
      PAPERLESS_REDIS: redis://paperless-redis:6379
      USERMAP_UID: ${PUID:?}
      USERMAP_GID: ${PGID:?}
      PAPERLESS_OCR_LANGUAGES: "heb rus"
      PAPERLESS_URL: https://paperless.${DOMAIN:?}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY:?}
      PAPERLESS_TIME_ZONE: ${TZ:?}
      PAPERLESS_OCR_LANGUAGE: heb
      PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
      # Set if accessing paperless via a domain subpath e.g. https://domain.com/PATHPREFIX and using a reverse-proxy like traefik or nginx
      #PAPERLESS_FORCE_SCRIPT_NAME: /PATHPREFIX
      #PAPERLESS_STATIC_URL: /PATHPREFIX/static/ # trailing slash required
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/paperless/data
        target: /usr/src/paperless/data
      - type: bind
        source: ${USER_DATA_PATH:?}/documents/media
        target: /usr/src/paperless/media
      - type: bind
        source: ${USER_DATA_PATH:?}/documents/export
        target: /usr/src/paperless/export
      - type: bind
        source: ${USER_DATA_PATH:?}/documents/consume
        target: /usr/src/paperless/consume
    healthcheck:
      test:
        ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - paperless-ngx
    labels:
      com.centurylinklabs.watchtower.enable: true
      docker-volume-backup.stop-during-backup: paperless
      traefik.enable: true
      traefik.http.routers.paperless-ngx.rule: Host(`paperless.${DOMAIN:?}`)
      traefik.http.routers.paperless-ngx.entryPoints: websecure
      traefik.http.routers.paperless-ngx.middlewares: ip-allowlist@docker
    depends_on:
      - paperless-redis
    restart: unless-stopped

  paperless-redis:
    image: docker.io/library/redis:7
    container_name: paperless-redis
    profiles:
      - paperless
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/paperless/cache
        target: /data
    networks:
      - paperless-ngx
    restart: unless-stopped

  paperless-backup:
    image: offen/docker-volume-backup:v2
    container_name: paperless-backup
    profiles:
      - backup
      - paperless
    environment:
      EXEC_LABEL: paperless
      BACKUP_STOP_DURING_BACKUP_LABEL: paperless
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 7
    volumes:
      - type: bind
        source: ${APP_DATA_PATH:?}/paperless
        target: /backup/paperless
        read_only: true
      - type: bind
        source: ${USER_DATA_PATH:?}/documents
        target: /backup/documents
        read_only: true
      - type: bind
        source: ${BACKUP_DATA_PATH:?}/paperless
        target: /archive
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    network_mode: none
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped

networks:
  paperless-ngx:
    name: paperless-ngx
